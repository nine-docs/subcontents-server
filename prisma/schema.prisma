generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x", "darwin-arm64", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Bookmark {
  id         BigInt    @id @default(autoincrement())
  user_id    BigInt
  article_id BigInt
  created_at DateTime? @default(now()) @db.Timestamp(6)

  @@unique([user_id, article_id], map: "user_id")
  @@index([user_id], map: "idx_user_id")
  @@map("bookmark")
}

model Comment {
  id              BigInt    @id @default(autoincrement())
  user_id         BigInt
  article_id      BigInt
  content         String    @db.Text
  created_at      DateTime? @default(now()) @db.Timestamp(6)
  updated_at      DateTime? @default(now()) @db.Timestamp(6)
  reply_count     BigInt    @default(0)
  deleted_at      DateTime? @db.Timestamp(6)
  recommend_count BigInt    @default(0)

  @@index([article_id], map: "idx_article_id")
  @@map("comment")
}

model Reply {
  id              BigInt    @id @default(autoincrement())
  user_id         BigInt
  comment_id      BigInt
  content         String    @db.Text
  created_at      DateTime? @default(now()) @db.Timestamp(6)
  updated_at      DateTime? @default(now()) @db.Timestamp(6)
  recommend_count BigInt    @default(0)

  @@index([comment_id], map: "idx_comment_id")
  @@map("reply")
}

model CommentRecommend {
  id         BigInt   @id @default(autoincrement())
  user_id    BigInt
  comment_id BigInt
  created_at DateTime @default(now()) @db.DateTime(6)

  @@unique([user_id, comment_id], map: "user_comment_unique")
  @@map("comment_recommend")
}

model ReplyRecommend {
  id         BigInt   @id @default(autoincrement())
  user_id    BigInt
  reply_id   BigInt
  created_at DateTime @default(now()) @db.DateTime(6)

  @@unique([user_id, reply_id], map: "uniq_user_reply")
  @@map("reply_recommend")
}
